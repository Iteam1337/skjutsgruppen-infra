apiVersion: v1
kind: Namespace
metadata:
  name: pgadmin
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pgadmin
  namespace: pgadmin
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pgadmin
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: pgadmin
    spec:
      containers:
      - name: pgadmin
        env:
        - name: PGADMIN_DEFAULT_EMAIL
          valueFrom:
            secretKeyRef:
              name: pgadmin
              key: PGADMIN_DEFAULT_EMAIL
        - name: PGADMIN_DEFAULT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: pgadmin
              key: PGADMIN_DEFAULT_PASSWORD
        - name: PGADMIN_SERVER_JSON_FILE
          value: "/opt/config/servers.json"
        image: dpage/pgadmin4
        ports:
        - containerPort: 80
        resources:
          requests:
            cpu: 300m
            memory: 512Mi
        volumeMounts:
        - name: config
          mountPath: /opt/config
      volumes:
      - name: config
        configMap:
          name: pgadmin
---
apiVersion: v1
kind: Service
metadata:
  name: pgadmin
  namespace: pgadmin
spec:
  ports:
  - port: 80
  selector:
    app: pgadmin

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: pgadmin-ingress
  namespace: pgadmin
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  tls:
    - hosts:
        - secret.skjutsgruppen.se
      secretName: pgadmin-prod-tls
  rules:
    - host: secret.skjutsgruppen.se
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: pgadmin
                port:
                  number: 80
